name: Deploy AWS Security Scanner

on:
  workflow_call:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug AWS Secrets in Deploy Workflow
        run: |
          echo "üîç Checking AWS Secrets inside deploy.yaml..."
          if [[ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]]; then
            echo "‚ùå AWS_ACCESS_KEY_ID is NOT available in deploy.yaml!"
            exit 1
          else
            echo "‚úÖ AWS_ACCESS_KEY_ID is available in deploy.yaml."
          fi

          if [[ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]]; then
            echo "‚ùå AWS_SECRET_ACCESS_KEY is NOT available in deploy.yaml!"
            exit 1
          else
            echo "‚úÖ AWS_SECRET_ACCESS_KEY is available in deploy.yaml."
          fi

      - name: Set AWS Credentials from GitHub Secrets
        run: |
          echo "üîç Exporting AWS credentials..."
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_REGION=us-east-1" >> $GITHUB_ENV
          echo "‚úÖ AWS credentials set."

      - name: Verify AWS Credentials
        run: |
          echo "üîç Checking AWS credentials..."
          echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:0:4}********"
          echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:0:4}********"
          aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Deploy with Terraform
        run: |
          cd deployment/terraform
          terraform init
          terraform apply -auto-approve
