name: Deploy AWS Security Scanner

on:
  workflow_call: # Allows this workflow to be called from other workflows
  workflow_dispatch: # Allows manual triggering from GitHub Actions UI

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensure full repo history is cloned

      - name: Print Current Working Directory & List Files
        run: |
          echo "üìÇ Current Directory: $(pwd)"
          ls -R

      - name: Verify src/ Exists
        run: |
          if [[ -d src ]]; then
            echo "‚úÖ src directory found"
            ls -R src/
          else
            echo "‚ùå src directory is missing!"
            exit 1
          fi

      - name: Check if report_generator.py Exists
        run: |
          if [[ -f src/report_generator.py ]]; then
            echo "‚úÖ report_generator.py found!"
          else
            echo "‚ùå report_generator.py is missing! Current directory: $(pwd)"
            ls -R
            exit 1
          fi

      - name: Set AWS Credentials from GitHub Secrets
        run: |
          echo "Setting AWS credentials from GitHub Secrets..."
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_REGION=us-east-1" >> $GITHUB_ENV
          echo "‚úÖ AWS credentials set."

      - name: Verify AWS Credentials
        run: aws sts get-caller-identity

      - name: Install Dependencies & Package Lambda Functions
        run: |
          cd deployment
          mkdir -p lambda_packages

          declare -A lambda_files
          lambda_files=( 
            ["lambda_iam"]="iam_scanner.py" 
            ["lambda_report"]="report_generator.py" 
            ["lambda_ec2"]="ec2_scanner.py" 
            ["lambda_s3"]="s3_scanner.py"
          )

          for dir in "${!lambda_files[@]}"; do
            mkdir -p lambda_packages/$dir
            if [[ -f terraform/modules/$dir/requirements.txt ]]; then
              pip install --no-warn-script-location --requirement terraform/modules/$dir/requirements.txt -t lambda_packages/$dir/ || true
            fi
            
            if [[ -f ../src/${lambda_files[$dir]} ]]; then
              echo "‚úÖ Copying ../src/${lambda_files[$dir]} to lambda_packages/$dir/"
              cp ../src/${lambda_files[$dir]} lambda_packages/$dir/lambda_function.py
              cd lambda_packages/$dir && zip -r ../../terraform/modules/$dir/lambda_function.zip .
              cd ../../
            else
              echo "‚ùå Error: Required source file ../src/${lambda_files[$dir]} is missing! Aborting deployment."
              ls -R ../src/
              exit 1
            fi
          done

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Deploy with Terraform
        run: |
          cd deployment/terraform
          terraform init
          terraform apply -auto-approve
